{"ast":null,"code":"import axios from 'axios'; // import { toast } from 'react-toastify';\n\nexport default class AxiosClass {\n  getHeaders(options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.headers) {\n      options.headers = {// Authorization : 'Bearer ' + getCookie('accessToken')\n      };\n    }\n\n    if (!options.headers['Content-Type'] && !options.headers['skipSettingContentType']) {\n      options.headers['Content-Type'] = 'application/json';\n    }\n\n    return options;\n  }\n\n  get(url, options) {\n    return this.responseHandler(axios.get(url, this.getHeaders(options)));\n  }\n\n  post(url, body, options) {\n    return this.responseHandler(axios.post(url, body, this.getHeaders(options)));\n  }\n\n  put(url, body, options) {\n    return this.responseHandler(axios.put(url, body, this.getHeaders(options)));\n  }\n\n  delete(url, options) {\n    return this.responseHandler(axios.delete(url, this.getHeaders(options)));\n  }\n\n  async responseHandler(responsePromise) {\n    try {\n      const response = await responsePromise;\n      return response['data'];\n    } catch (error) {\n      // toast.error(error.response.data.error? error.response.data.error: 'something went wrong')\n      throw error;\n    }\n  }\n\n}\nexport const AxiosService = new AxiosClass();","map":{"version":3,"sources":["/home/aponiar/Pictures/my-app/src/api-services/axios.service.js"],"names":["axios","AxiosClass","getHeaders","options","headers","get","url","responseHandler","post","body","put","delete","responsePromise","response","error","AxiosService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAKA,eAAe,MAAMC,UAAN,CAAiB;AAG5BC,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,QAAI,CAACA,OAAL,EAAc;AACVA,MAAAA,OAAO,GAAG,EAAV;AACH;;AACD,QAAI,CAACA,OAAO,CAACC,OAAb,EAAsB;AAClBD,MAAAA,OAAO,CAACC,OAAR,GAAkB,CACd;AADc,OAAlB;AAGH;;AACD,QAAI,CAACD,OAAO,CAACC,OAAR,CAAgB,cAAhB,CAAD,IAAoC,CAACD,OAAO,CAACC,OAAR,CAAgB,wBAAhB,CAAzC,EAAoF;AAChFD,MAAAA,OAAO,CAACC,OAAR,CAAgB,cAAhB,IAAiC,kBAAjC;AACH;;AACD,WAAOD,OAAP;AACH;;AAGDE,EAAAA,GAAG,CAACC,GAAD,EAAMH,OAAN,EAAe;AACd,WAAO,KAAKI,eAAL,CAAqBP,KAAK,CAACK,GAAN,CAAUC,GAAV,EAAe,KAAKJ,UAAL,CAAgBC,OAAhB,CAAf,CAArB,CAAP;AACH;;AAEDK,EAAAA,IAAI,CAACF,GAAD,EAAMG,IAAN,EAAYN,OAAZ,EAAqB;AACrB,WAAO,KAAKI,eAAL,CAAqBP,KAAK,CAACQ,IAAN,CAAWF,GAAX,EAAgBG,IAAhB,EAAsB,KAAKP,UAAL,CAAgBC,OAAhB,CAAtB,CAArB,CAAP;AACH;;AAEDO,EAAAA,GAAG,CAACJ,GAAD,EAAMG,IAAN,EAAYN,OAAZ,EAAqB;AACpB,WAAO,KAAKI,eAAL,CAAqBP,KAAK,CAACU,GAAN,CAAUJ,GAAV,EAAeG,IAAf,EAAqB,KAAKP,UAAL,CAAgBC,OAAhB,CAArB,CAArB,CAAP;AACH;;AAEDQ,EAAAA,MAAM,CAACL,GAAD,EAAMH,OAAN,EAAe;AACjB,WAAO,KAAKI,eAAL,CAAqBP,KAAK,CAACW,MAAN,CAAaL,GAAb,EAAkB,KAAKJ,UAAL,CAAgBC,OAAhB,CAAlB,CAArB,CAAP;AACH;;AAED,QAAMI,eAAN,CAAsBK,eAAtB,EAAuC;AACnC,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMD,eAAvB;AACA,aAAOC,QAAQ,CAAC,MAAD,CAAf;AACH,KAHD,CAGE,OAAMC,KAAN,EAAa;AAEP;AACA,YAAMA,KAAN;AACP;AACJ;;AA5C2B;AAgDhC,OAAO,MAAMC,YAAY,GAAG,IAAId,UAAJ,EAArB","sourcesContent":["import axios from 'axios';\n// import { toast } from 'react-toastify';\n\n\n\n\nexport default class AxiosClass {\n    \n\n    getHeaders(options) {\n        if (!options) {\n            options = {}\n        }\n        if (!options.headers) {\n            options.headers = {\n                // Authorization : 'Bearer ' + getCookie('accessToken')\n            };\n        }\n        if (!options.headers['Content-Type'] && !options.headers['skipSettingContentType']) {\n            options.headers['Content-Type']= 'application/json';\n        }\n        return options;\n    }\n\n\n    get(url, options) {\n        return this.responseHandler(axios.get(url, this.getHeaders(options)));\n    }\n\n    post(url, body, options) {\n        return this.responseHandler(axios.post(url, body, this.getHeaders(options)));\n    }\n\n    put(url, body, options) {\n        return this.responseHandler(axios.put(url, body, this.getHeaders(options)));\n    }\n\n    delete(url, options) {\n        return this.responseHandler(axios.delete(url, this.getHeaders(options)));\n    }\n\n    async responseHandler(responsePromise) {\n        try {\n            const response = await responsePromise;\n            return response['data'];\n        } catch(error) {\n            \n                // toast.error(error.response.data.error? error.response.data.error: 'something went wrong')\n                throw error;\n        }\n    }\n    \n}\n\nexport const AxiosService = new AxiosClass(); \n"]},"metadata":{},"sourceType":"module"}