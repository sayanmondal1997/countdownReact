{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aponiar/Pictures/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { GetConfigurationAction } from './actions/GetConfigurationAction';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nfunction App(props) {\n  _s();\n\n  const [count, setCount] = useState(6);\n  const [loading, loadingfunc] = useState(true); // const count=0;\n\n  useEffect(() => {\n    console.log('hjgyjhgui jhgyg jhggu jyguy', props);\n    props.dispatch(GetConfigurationAction(res => {\n      console.log('config response', res);\n    }));\n  }, [props.counter]);\n\n  var click = () => {\n    props.dispatch(GetConfigurationAction(res => {\n      console.log('config response', res);\n      loadingfunc(false);\n      console.log('sayanljj');\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: this.router.routes.map(route => route.redirectTo ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: route.redirectTo\n          }, route.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Route, {\n            exact: route.exact,\n            path: route.path,\n            component: route.component\n          }, route.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You clicked \", count, \" times\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => [setCount(count + 1), loadingfunc(true)],\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => click(),\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lVqmt3ZrLHnb88jYZz5szPN9McI=\");\n\n_c = App;\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aponiar/Pictures/my-app/src/App.js"],"names":["React","useState","useEffect","connect","GetConfigurationAction","BrowserRouter","Route","Redirect","Switch","App","props","count","setCount","loading","loadingfunc","console","log","dispatch","res","counter","click","router","routes","map","route","redirectTo","path","exact","component","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,MAAzC,QAAuD,kBAAvD;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAAC,IAAD,CAAvC,CAFkB,CAGlB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CN,KAA3C;AACAA,IAAAA,KAAK,CAACO,QAAN,CAAeb,sBAAsB,CAAEc,GAAD,IAAS;AAC7CH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,GAA/B;AACD,KAFoC,CAArC;AAGD,GALQ,EAKN,CAACR,KAAK,CAACS,OAAP,CALM,CAAT;;AAOA,MAAIC,KAAK,GAAG,MAAM;AAChBV,IAAAA,KAAK,CAACO,QAAN,CAAeb,sBAAsB,CAAEc,GAAD,IAAS;AAC7CH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,GAA/B;AACAJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAJoC,CAArC;AAOD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,aAAD;AAAA,6BACE;AAAA,+BACE,QAAC,MAAD;AAAA,oBACG,KAAKK,MAAL,CAAYC,MAAZ,CAAmBC,GAAnB,CAAuBC,KAAK,IAC3BA,KAAK,CAACC,UAAN,gBACE,QAAC,QAAD;AAA2B,YAAA,EAAE,EAAED,KAAK,CAACC;AAArC,aAAeD,KAAK,CAACE,IAArB;AAAA;AAAA;AAAA;AAAA,kBADF,gBAEE,QAAC,KAAD;AAAwB,YAAA,KAAK,EAAEF,KAAK,CAACG,KAArC;AAA4C,YAAA,IAAI,EAAEH,KAAK,CAACE,IAAxD;AAA8D,YAAA,SAAS,EAAEF,KAAK,CAACI;AAA/E,aAAYJ,KAAK,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA,kBAHH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAA,iBACGb,OAAO,iBACN;AAAA,mCAAgBF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAM,CAACC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAT,EAAsBG,WAAW,CAAC,IAAD,CAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAMM,KAAK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAjDQX,G;;KAAAA,G;;AAkDT,MAAMoB,eAAe,GAAGC,KAAK,IAAIA,KAAjC;;AACA,eAAe3B,OAAO,CAAC0B,eAAD,CAAP,CAAyBpB,GAAzB,CAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { GetConfigurationAction } from './actions/GetConfigurationAction';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nfunction App(props) {\n  const [count, setCount] = useState(6);\n  const [loading, loadingfunc] = useState(true);\n  // const count=0;\n\n  useEffect(() => {\n    console.log('hjgyjhgui jhgyg jhggu jyguy', props);\n    props.dispatch(GetConfigurationAction((res) => {\n      console.log('config response', res)\n    }))\n  }, [props.counter]);\n\n  var click = () => {\n    props.dispatch(GetConfigurationAction((res) => {\n      console.log('config response', res)\n      loadingfunc(false)\n      console.log('sayanljj')\n    }))\n\n\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>\n          <Switch>\n            {this.router.routes.map(route =>\n              route.redirectTo ?\n                <Redirect key={route.path} to={route.redirectTo} /> :\n                <Route key={route.path} exact={route.exact} path={route.path} component={route.component} />\n            )\n            }\n          </Switch>\n        </div>\n      </BrowserRouter>\n\n      <div>\n        {loading &&\n          <p>You clicked {count} times</p>}\n        <button onClick={() => [setCount(count + 1), loadingfunc(true)]}>\n          Count\n      </button>\n        <button onClick={() => click()}>\n          Click me\n      </button>\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}