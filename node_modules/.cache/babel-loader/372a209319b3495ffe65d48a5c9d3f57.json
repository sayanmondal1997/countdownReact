{"ast":null,"code":"import { takeLatest, takeEvery } from 'redux-saga/effects';\nimport * as types from '../actions/types';\nexport const actionArr = [];\nlet actionLength = 0;\nexport function* watchActions() {\n  // Declare every saga here with the action type\n  // Ex:  yield takeLatest(types.ACTION_TYPE, sagaGeneratorFunction);\n  if (actionArr.length && actionLength != actionArr.length) {\n    actionLength = actionArr.length;\n    let lastIndex = actionArr.length - 1;\n    yield takeEvery(actionArr[lastIndex].actionType, actionArr[lastIndex].sagaFunc);\n  }\n\n  for (let i in actionArr) {//yield cancel(actionArr[i].actionType);\n    //yield delay(500)\n    //yield takeEvery(actionArr[i].actionType, actionArr[i].sagaFunc)\n  }\n}","map":{"version":3,"sources":["/home/aponiar/Pictures/my-app/src/saga/watcher.js"],"names":["takeLatest","takeEvery","types","actionArr","actionLength","watchActions","length","lastIndex","actionType","sagaFunc","i"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,oBAAtC;AACA,OAAO,KAAKC,KAAZ,MAAuB,kBAAvB;AAEA,OAAO,MAAMC,SAAS,GAAG,EAAlB;AACP,IAAIC,YAAY,GAAG,CAAnB;AACA,OAAO,UAAUC,YAAV,GAAyB;AAC9B;AACA;AACA,MAAIF,SAAS,CAACG,MAAV,IAAoBF,YAAY,IAAID,SAAS,CAACG,MAAlD,EAA0D;AACxDF,IAAAA,YAAY,GAAGD,SAAS,CAACG,MAAzB;AACF,QAAIC,SAAS,GAAGJ,SAAS,CAACG,MAAV,GAAmB,CAAnC;AACA,UAAML,SAAS,CAACE,SAAS,CAACI,SAAD,CAAT,CAAqBC,UAAtB,EAAkCL,SAAS,CAACI,SAAD,CAAT,CAAqBE,QAAvD,CAAf;AACC;;AACD,OAAI,IAAIC,CAAR,IAAaP,SAAb,EAAwB,CACtB;AACA;AACA;AACD;AACF","sourcesContent":["import { takeLatest, takeEvery } from 'redux-saga/effects';\nimport * as types from '../actions/types';\n\nexport const actionArr = []\nlet actionLength = 0;\nexport function* watchActions() {\n  // Declare every saga here with the action type\n  // Ex:  yield takeLatest(types.ACTION_TYPE, sagaGeneratorFunction);\n  if (actionArr.length && actionLength != actionArr.length) {\n    actionLength = actionArr.length;\n  let lastIndex = actionArr.length - 1;\n  yield takeEvery(actionArr[lastIndex].actionType, actionArr[lastIndex].sagaFunc)\n  }\n  for(let i in actionArr) {\n    //yield cancel(actionArr[i].actionType);\n    //yield delay(500)\n    //yield takeEvery(actionArr[i].actionType, actionArr[i].sagaFunc)\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}